---
export const prerender = true;

import HomeLayout_ from 'src/layouts/home.astro';

import Articles_ from 'src/sections/index/articles.astro';
import Details_ from 'src/sections/index/details.astro';
import HeroHome_ from 'src/sections/index/hero.astro';
// import HowItWorks_ from 'src/sections/index/howitworks.astro';
import Media_ from 'src/sections/index/media.astro';
import Quotes_ from 'src/sections/index/quotes.astro';
import Report_ from 'src/sections/index/report.astro';
import Stats_ from 'src/sections/index/stats.astro';
import Who_ from 'src/sections/index/who.astro';

import SvgPattern_ from 'src/components/svg-pattern.astro';
---

<HomeLayout_ navFixed={true} navOpaqueAtTop={false}>
	<HeroHome_ />

	<div class="bg">
		<SvgPattern_ id="_helix" src="public/img/icon/helix.svg" />
		<SvgPattern_ id="_helix-pattern" src="public/img/icon/helix-pattern.svg" width="30" height="30" />
	</div>

	<Stats_ />

	<Details_ />

	<Quotes_ />

	<!-- <HowItWorks_ /> -->

	<Report_ />

	<Who_ />

	<Media_ />

	<Articles_ />
</HomeLayout_>

<style lang="scss">
@use 'sass:math';
@use 'src/scss/vars';

$helix__aspect: 1;
$helix__width: 250px;
$helix__height: ($helix__width * $helix__aspect);

.bg {
	position: fixed;
}

._helix {
	height: 100%;
	position: absolute;
	width: $helix__width;
	z-index: 2;

	:global(svg) {
		animation: helix 20s linear infinite;
		filter: drop-shadow(-1px 1px 0 vars.$color--brand--offset--sink);
		height: 200vh;
		left: 0;
		position: absolute;
		top: 0;
		width: 100%;
	}

	:global(line),
	:global(path) {
		fill: none;
		stroke: vars.$color--brand--offset;
		stroke-width: 8;
	}

	:global(rect) {
		height: 100%;
		transform: scale(#{math.div($helix__height, 100px)});
		width: 100px;
	}

	@keyframes helix {
		from {
			top: #{-1 * $helix__height};
		}

		to {
			top: #{-2 * $helix__height};
		}
	}

	&-pattern {
		@include vars.expand;

		background-color: vars.$color--brand--offset;

		:global(path) {
			fill: none;
			stroke: vars.$color--brand--offset--sink;
			stroke-width: 3;
		}

		&::before {
			@include vars.expand;

			background-image: linear-gradient(75deg, vars.gradient-split(vars.$color--bg, '00', 25%));
			z-index: 1;
		}
	}

	@include vars.if-viewport('<', lg) {
		bottom: 0;
		left: calc(100% + 30px);
		transform: rotateZ(-10deg);
		transform-origin: bottom;
	}

	@include vars.if-viewport('==', lg) {
		bottom: 0;
		left: 100%;
		transform: rotateZ(-10deg);
		transform-origin: bottom;
	}

	@include vars.if-viewport('>', lg) {
		bottom: 0;
		right: 0;
		transform: rotateZ(-10deg);
		transform-origin: bottom;
	}
}
</style>
