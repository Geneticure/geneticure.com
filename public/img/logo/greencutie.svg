<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 275 50">
	<style>
		:root {
			--duration-delay: 1s;
			--duration-features: .5s;
			--duration-spin: 1s;
			--color-blue: #009ADE;
			--color-green: #36DD89;
			--transform-start: rotateZ(0deg);
		}

		.eye,
		.mouth {
			fill:#424143;
		}

		.eyeball {
			animation: eyeball 10s forwards;
			animation-delay: calc(var(--duration-delay) + var(--duration-spin) + var(--duration-features));
			fill: #fff;
			transform: scaleY(0);
			transform-box: fill-box;
			transform-origin: bottom center;
			-moz-transform-origin: 10px 22.05px; /* sigh */
		}

		@keyframes eyeball {
			0% {
				transform: scaleX(0);
			}

			10% {
				transform: scaleX(1);
			}

			11% {
				transform: scaleX(0);
			}

			12%,
			100% {
				transform: scaleX(1);
			}
		}

		.cheek,
		.nose {
			animation: skin var(--duration-features) forwards;
			animation-delay: calc(var(--duration-delay) + var(--duration-spin));
			fill: var(--color-blue);
		}

		@keyframes skin {
			0% {
				fill: var(--color-blue);
			}

			100% {
				fill: var(--color-green);
			}
		}

		.face {
			animation: face var(--duration-spin) forwards;
			animation-delay: calc(var(--duration-delay));
			transform: var(--transform-start);
			transform-box: fill-box;
			transform-origin: center;
		}

		@keyframes face {
			0%,
			50% {
				transform: var(--transform-start);
			}

			100% {
				transform: rotateZ(90deg);
			}
		}

		#text > * {
			animation-duration: 1s;
			animation-delay: calc(var(--duration-delay) + var(--duration-spin));
			animation-fill-mode: forwards;
		}

		/* Scripts in embedded SVGs are all weird, so just doing this with CSS */
		@keyframes text-0 { to { transform: translateX(0px); } } #text > :nth-child(1) { animation-name: text-0; } @keyframes text-1 { to { transform: translateX(21.50354766845703px); } } #text > :nth-child(2) { animation-name: text-1; } @keyframes text-2 { to { transform: translateX(39.90354919433594px); } } #text > :nth-child(3) { animation-name: text-2; } @keyframes text-3 { to { transform: translateX(-3.396453857421875px); } } #text > :nth-child(4) { animation-name: text-3; } @keyframes text-4 { to { transform: translateX(86.72673797607422px); } } #text > :nth-child(5) { animation-name: text-4; } @keyframes text-5 { to { transform: translateX(88.52672576904297px); } } #text > :nth-child(6) { animation-name: text-5; } @keyframes text-6 { to { transform: translateX(15.703544616699219px); } } #text > :nth-child(7) { animation-name: text-6; } @keyframes text-7 { to { transform: translateX(16.626731872558594px); } } #text > :nth-child(8) { animation-name: text-7; } @keyframes text-8 { to { transform: translateX(-128.80001831054688px); } } #text > :nth-child(9) { animation-name: text-8; } @keyframes text-9 { to { transform: translateX(22.626731872558594px); } } #text > :nth-child(10) { animation-name: text-9; } @keyframes text-10 { to { transform: translateX(-83.35645294189453px); } } #text > :nth-child(11) { animation-name: text-10; }

	</style>

	<!--<script>
		const ATTR__CHAR = `data-char`;
		const ATTR__TARGET__INDEX = `data-target-index`;
		const ATTR__TARGET__POSITION = `data-target-position`;

		document.addEventListener(`DOMContentLoaded`, () => {
			const $text = document.getElementById(`text`);
			const $characters = Array.from($text.children);

			const $charactersByOrigin = [...$characters];
			`green cutie`.split(``).forEach((character, targetIndex) => {
				const startIndex = $charactersByOrigin.findIndex(($character) => {
					return $character.getAttribute(ATTR__CHAR) === character;
				});

				if (startIndex === -1) {
					return;
				}

				const $character = $charactersByOrigin[startIndex];
				$character.setAttribute(ATTR__TARGET__INDEX, targetIndex);
				$charactersByOrigin.splice(startIndex, 1);
			});

			const $charactersByTarget = [...$characters];
			$charactersByTarget.sort(($a, $b) => $a.getAttribute(ATTR__TARGET__INDEX) - $b.getAttribute(ATTR__TARGET__INDEX));

			let targetX = $text.getBBox().x;
			$charactersByTarget.forEach(($character) => {
				let { x, width } = $character.getBBox();
				const difference = targetX - x;
				$character.setAttribute(ATTR__TARGET__POSITION, difference);
				targetX = targetX + width + 5;
			});

			let out = [];
			$characters.forEach(($character, index) => {
				const translateX = $character.getAttribute(ATTR__TARGET__POSITION);
				out.push(`@keyframes text-${index} { to { transform: translateX(${translateX}px); } } #text > :nth-child(${index + 1}) { animation-name: text-${index}; }`);
			});
			console.log(out.join(` `));
		});
	</script>-->

  <g class="face">
    <path class="eye" d="M24.19,2.78h-7.9c-3.41,0-6.29,2.69-6.29,6.29s2.87,6.29,6.29,6.29h7.9V2.78Z"/>
    <path class="cheek" d="M25.81,15.36h7.9c3.41,0,6.29-2.87,6.29-6.29s-2.87-6.29-6.29-6.29h-7.9V15.36Z"/>
    <path class="eye" d="M24.19,34.04h-7.9c-3.41,0-6.29,2.87-6.29,6.29s2.87,6.29,6.29,6.29h7.9v-12.57Z"/>
    <path class="cheek" d="M25.81,46.62h7.9c3.41,0,6.29-2.87,6.29-6.29s-2.87-6.29-6.29-6.29h-7.9v12.57Z"/>
    <path class="mouth" d="M25.81,18.41h7.9c3.41,0,6.29,2.87,6.29,6.29s-2.87,6.29-6.29,6.29h-7.9v-12.57Z"/>
    <path class="nose" d="M24.19,30.99h-7.9c-3.41,0-6.29-2.87-6.29-6.29s2.87-6.29,6.29-6.29h7.9v12.57Z"/>
    <path class="eyeball" d="M20.69,40.04c-1.38,0-2.5-1.12-2.5-2.5,0-1.16,.79-2.12,1.85-2.4-.28-.06-.56-.1-.85-.1-2.21,0-4,1.79-4,4s1.79,4,4,4,4-1.79,4-4c0-.29-.04-.58-.1-.85-.29,1.06-1.25,1.85-2.4,1.85Z"/>
    <path class="eyeball" d="M20.69,9.36c-1.38,0-2.5,1.12-2.5,2.5,0,1.16,.79,2.12,1.85,2.4-.28,.06-.56,.1-.85,.1-2.21,0-4-1.79-4-4s1.79-4,4-4,4,1.79,4,4c0,.29-.04,.58-.1,.85-.29-1.06-1.25-1.85-2.4-1.85Z"/>
  </g>

  <g id="text">
		<path data-char="g" d="M75.7,26.5c-.7,5.9-6.2,10.8-13,10.8s-12.7-5.3-12.7-12.7,5.7-12.6,12.7-12.6c4.5,0,8.9,2.2,11.1,5.8h-1.2c-2.4-3.2-5.9-5-9.9-5-6.5,0-11.7,5-11.7,11.8s5.2,11.8,11.7,11.8,10.9-4.4,11.8-9h-14.5v-.9h15.7Z"/>
		<path data-char="e" d="M93.2,12.4v.9h-12.4v10.8h12.4v.9h-12.4v11h12.4v.9h-13.4V12.4h13.4Z"/>
		<path data-char="n" d="M116.5,35.6l.1-23.1h1v24.4h-1.3l-17-23.5h-.1v23.5h-1V12.4h1.5l16.8,23.2Z"/>
		<path data-char="e" d="M136.5,12.4v.9h-12.4v10.8h12.4v.9h-12.4v11h12.4v.9h-13.4V12.4h13.4Z"/>
		<path data-char="t" d="M153.4,12.4v.9h-6.6v23.6h-1V13.3h-6.6v-.9h14.2Z"/>
		<path data-char="i" d="M156.6,36.9h1V12.4h-1v24.5Z"/>
		<path data-char="c" d="M185.2,31.6c-1.7,2.8-5.6,5.7-10.7,5.7-7,0-12.7-5.3-12.7-12.7s5.8-12.6,12.8-12.6c5.2,0,8.9,3.1,10.7,5.9h-1.2c-.9-1.3-4.1-5-9.5-5-6.5,0-11.7,5-11.7,11.8s5.2,11.8,11.7,11.8c5.7,0,8.9-3.9,9.5-4.9h1.1Z"/>
		<path data-char="u" d="M189.4,12.4h1v15.9c0,2.4,0,3.9,1.5,5.9,1.1,1.4,3.1,2.2,5,2.2s3.9-.9,4.9-2.2c1.5-2,1.5-3.5,1.5-5.9V12.4h1v15.9c0,2.2-.1,5.5-2.9,7.5-1.3,.9-2.9,1.5-4.6,1.5s-3.3-.6-4.5-1.5c-2.9-2-3-5.3-2.9-7.5V12.4Z"/>
		<path data-char="r" d="M215.1,12.4c3.8,0,5.3,.3,6.5,1,2,1,3.5,3.7,3.5,6.5,.1,3-1.9,7.6-7.2,7.7h-1l6.6,9.2h-1.3l-7.2-10.1h1.5c2.3,0,3.8-.2,5.4-1.6,1.6-1.6,2.1-3.3,2.1-5.2,0-2.1-1-4.5-2.9-5.7-1.5-1-3.3-1-6.1-1h-4.5v23.6h-1V12.4h5.6Z"/>
		<path data-char="e" d="M241.9,12.4v.9h-12.4v10.8h12.4v.9h-12.4v11h12.4v.9h-13.4V12.4h13.4Z"/>
		<rect data-char=" " fill="transparent" x="245.86" y="12.4" width="10" height="0" />
  </g>
</svg>
